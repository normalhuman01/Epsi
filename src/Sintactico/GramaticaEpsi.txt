PRINCIPAL -> class id { INSTRUCCION
CONSTRUCTOR -> id ARGS { INSTRUCCION
LLAMAMET -> id . LLAMAMET
LLAMAMET -> id PARAM 
DECMET -> LLAMAMET ;
METODO -> TIPOP TIPO id ARGS { INSTRUCCION
METODO -> TIPOP id ARGS { INSTRUCCION
RETORNA -> return id ;
RETORNA -> return NUM ;
BUCLE -> while ( OPERACION ) { INSTRUCCION
CONDICION -> if ( OPERACION ) { INSTRUCCION 
CONDICION -> if ( OPERACION ) { INSTRUCCION else { INSTRUCCION 
DECMAIN -> FIRP ( ) { INSTRUCCION
VAR -> TIPOP TIPO id MASVAR
VAR -> TIPO id MASVAR
VAR -> TIPO id MAS
VAR -> id MAS
VAR -> id MASVAR
MASVAR -> = NUM MAS
MASVAR -> = - NUM MAS
MASVAR -> = ' id ' MAS
MASVAR -> = " MAST MAS
MASVAR -> = BO MAS
MASVAR -> = LLAMAMET MAS
MASVAR -> = OPERACION MAS
MASVAR -> VECTOR
MAS -> , id MAS
MAS -> , id MASVAR
MAS -> ;
VECTOR -> [ 300 ] DECV
DECV -> = { NUM MASV ;
DECV -> = { ' id ' MASV ;
DECV -> = { " MAST MASV ;
MASV -> , NUM MASV 
MASV -> , ' id ' MASV
MASV -> , " MAST MASV
MASV -> }
OPERACION -> ( OPERACION ) SIMBOLO MASOP
OPERACION -> NUM SIMBOLO MASOP
OPERACION -> id SIMBOLO MASOP
OPERACION -> LLAMAMET SIMBOLO MASOP
MASOP -> NUM SIMBOLO MASOP
MASOP -> id SIMBOLO MASOP
MASOP -> LLAMAMET SIMBOLO MASOP
MASOP -> NUM
MASOP -> id
MASOP -> LLAMAMET
SALIDA -> out : " MAST CONCATENA
CONCATENA -> + id CONCATENA
CONCATENA -> + " MAST CONCATENA
CONCATENA -> ;
ENTRADA -> in : id ;
ENTRADA -> in : id [ id ] ;
ENTRADA -> in : id [ 300 ] ;
DECLARAV -> id [ id ] = MASD
DECLARAV -> id [ 300 ] = MASD
MASD -> NUM ;
MASD -> - NUM ;
MASD -> ' id ' ;
MASD -> id ;
MASD -> LLAMAMET ;
INSTRUCCION -> CONSTRUCTOR INSTRUCCION
INSTRUCCION -> LLAMAMET INSTRUCCION
INSTRUCCION -> DECMET INSTRUCCION
INSTRUCCION -> RETORNA INSTRUCCION
INSTRUCCION -> METODO INSTRUCCION
INSTRUCCION -> BUCLE INSTRUCCION
INSTRUCCION -> CONDICION INSTRUCCION
INSTRUCCION -> VAR INSTRUCCION
INSTRUCCION -> DECLARAV INSTRUCCION
INSTRUCCION -> ENTRADA INSTRUCCION
INSTRUCCION -> SALIDA INSTRUCCION
INSTRUCCION -> DECMAIN INSTRUCCION
INSTRUCCION -> }
ARGS -> ( TIPO id MASAR
ARGS -> ( MASAR 
MASAR -> , TIPO id MASAR
MASAR -> )
PARAM -> ( 300 MASP
PARAM -> ( 301 MASP
PARAM -> ( ' id ' MASP
PARAM -> ( " MAST MASP
PARAM -> ( LLAMAMET MASP
PARAM -> ( VACIO
PARAM -> ( id MASP
VACIO -> )
MASP -> , 300 MASP
MASP -> , 301 MASP
MASP -> , ' id ' MASP
MASP -> , " MAST MASP
MASP -> , BO MASP
MASP -> , LLAMAMET MASP
MASP -> , id MASP
MASP -> )
MAST -> id MAST
MAST -> "
TIPOP -> pub
TIPOP -> pri
TIPO -> int
TIPO -> real
TIPO -> ctr
TIPO -> str
TIPO -> bool
TIPO -> id
SIMBOLO -> +
SIMBOLO -> -
SIMBOLO -> *
SIMBOLO -> /
SIMBOLO -> mod
SIMBOLO -> >
SIMBOLO -> <
SIMBOLO -> <=
SIMBOLO -> >=
SIMBOLO -> ==
SIMBOLO -> and
SIMBOLO -> or
SIMBOLO -> not
BO -> true
BO -> false
NUM -> 300
NUM -> 301